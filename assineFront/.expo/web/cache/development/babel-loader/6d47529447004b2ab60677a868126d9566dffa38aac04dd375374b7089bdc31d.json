{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createMaterialBottomTabNavigator();\nfunction Tela1(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('Tela2');\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Ir para a Tela 2\"\n      })\n    })\n  });\n}\nfunction Tela2() {\n  return _jsx(View, {\n    style: [styles.container, {\n      backgroundColor: 'red'\n    }],\n    children: _jsx(Text, {\n      style: styles.text,\n      children: \"Tela 2\"\n    })\n  });\n}\nfunction Tela3() {\n  return _jsx(View, {\n    style: [styles.container, {\n      backgroundColor: 'blue'\n    }],\n    children: _jsx(Text, {\n      style: styles.text,\n      children: \"Tela 3\"\n    })\n  });\n}\nfunction Tabs() {\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"Tela2\",\n      component: Tela2,\n      options: {\n        tabBarLabel: 'Tela 2',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"home\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Tela3\",\n      component: Tela3,\n      options: {\n        tabBarLabel: 'Tela 3',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"settings\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    })]\n  });\n}\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Tela1\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Tela1\",\n        component: Tela1,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Tabs\",\n        component: Tabs,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: 'white',\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  text: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","StyleSheet","Text","View","TouchableOpacity","NavigationContainer","createNativeStackNavigator","createMaterialBottomTabNavigator","MaterialCommunityIcons","jsx","_jsx","jsxs","_jsxs","Stack","Tab","Tela1","_ref","navigation","style","styles","container","children","button","onPress","navigate","buttonText","Tela2","backgroundColor","text","Tela3","Tabs","Navigator","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref2","color","size","_ref3","App","initialRouteName","headerShown","create","flex","alignItems","justifyContent","padding","borderRadius","fontWeight","fontSize"],"sources":["C:/Users/PC/Documents/ASSINE/assineFront/App.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\n// Primeira Tela\r\nfunction Tela1({ navigation }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Tela2')}>\r\n        <Text style={styles.buttonText}>Ir para a Tela 2</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\n// Segunda Tela\r\nfunction Tela2() {\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: 'red' }]}>\r\n      <Text style={styles.text}>Tela 2</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n// Terceira Tela\r\nfunction Tela3() {\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: 'blue' }]}>\r\n      <Text style={styles.text}>Tela 3</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n// Configuração do Navigation Tab\r\nfunction Tabs() {\r\n  return (\r\n    <Tab.Navigator>\r\n      <Tab.Screen\r\n        name=\"Tela2\"\r\n        component={Tela2}\r\n        options={{\r\n          tabBarLabel: 'Tela 2',\r\n          tabBarIcon: ({ color }) => <MaterialCommunityIcons name=\"home\" color={color} size={26} />,\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Tela3\"\r\n        component={Tela3}\r\n        options={{\r\n          tabBarLabel: 'Tela 3',\r\n          tabBarIcon: ({ color }) => <MaterialCommunityIcons name=\"settings\" color={color} size={26} />,\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\n// Configuração do Navigation Stack\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Tela1\">\r\n        <Stack.Screen\r\n          name=\"Tela1\"\r\n          component={Tela1}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Tabs\"\r\n          component={Tabs}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    color: 'black',\r\n    fontWeight: 'bold',\r\n  },\r\n  text: {\r\n    color: 'white',\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}